syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "rpc_create_transaction.proto";
import "rpc_update_transaction.proto";
import "rpc_create_categories.proto";
import "rpc_update_categories.proto";
import "rpc_get_categories.proto";


option go_package = "github.com/gufir/money-management/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Money Management API"
      version: "1.2"
      contact: {
        name: "gufir"
        url: "https://github.com/gufir"
        email: "gunawan.firdaus99@ymail.com"
      }
    };
};

// Service definition for SimpleBank
service MoneyManagement {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user."
            summary: "Create a new user"
        };
    }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            post: "/v1/update_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update user."
            summary: "Update user"
        };
    }

    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token."
            summary: "Login user"
        };
    };

    rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse){
        option (google.api.http) = {
            post: "/v1/create_transaction"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new transaction."
            summary: "Create a new transaction"
        };
    }

    rpc UpdateTransaction (UpdateTransactionRequest) returns (UpdateTransactionResponse){
        option (google.api.http) = {
            post: "/v1/update_transaction"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update transaction."
            summary: "Update transaction"
        };
    }

    rpc CreateCategories (CreateCategoriesRequest) returns (CreateCategoriesResponse){
        option (google.api.http) = {
            post: "/v1/create_categories"
            body: "*"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new category."
            summary: "Create a new category"
        };
    }

    rpc UpdateCategories (UpdateCategoriesRequest) returns (UpdateCategoriesResponse){
        option (google.api.http) = {
            post: "/v1/update_categories"
            body: "*"
        };
        
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update category."
            summary: "Update category"
        };
    }

    rpc GetCategories (GetCategoriesRequest) returns (GetCategoriesResponse){
        option (google.api.http) = {
            get: "/v1/get_categories"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get all categories."
            summary: "Get all categories"
        };
    }
}